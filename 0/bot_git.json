{"dependencies":[{"id":"dart.core","name":"dart:core","children":[{"id":"Object","name":"Object","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","line":"29"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns a string representation of this object.\n","line":"48"},{"id":"noSuchMethod1()","name":"noSuchMethod","children":[{"ref":{"name":"InvocationMirror","refId":"dart.core/InvocationMirror"},"id":"invocation","name":"invocation","kind":"param"}],"kind":"method","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [InvocationMirror].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"43"},{"ref":{"name":"Type","refId":"dart.core/Type"},"id":"runtimeType","name":"runtimeType","kind":"property","comment":"\nA representation of the runtime type of the object.\n","line":"65"},{"id":"Object0()","name":"Object","kind":"constructor","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"18"}],"uri":"file:///usr/local/Cellar/dart-editor/21094/dart-sdk//lib/core/object.dart","kind":"class","comment":"\nEverything in Dart is an [Object].\n","line":"10"}],"uri":"file:///usr/local/Cellar/dart-editor/21094/dart-sdk//lib/core/core.dart","kind":"library","line":"5"}],"id":"bot_git","children":[{"returnType":{"name":"void","refId":"void"},"id":"_metaRequireArgumentNotNullOrEmpty1()","name":"_metaRequireArgumentNotNullOrEmpty","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"argName","name":"argName","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"method","isPrivate":true,"line":"13"},{"returnType":{"name":"void","refId":"void"},"id":"requireArgumentValidSha12()","name":"requireArgumentValidSha1","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"value","name":"value","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"argName","name":"argName","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"method","line":"3"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"id":"PopulateTempDir","name":"PopulateTempDir","children":[{"ref":{"name":"TempDir","refId":"bot_io/TempDir"},"id":"dir","name":"dir","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git_dir.dart","kind":"typedef","comment":"\nA method that populates a [TempDir] asynchronously.\n","line":"526"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"_TempDirs","name":"_TempDirs","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"515"},{"returnType":{"name":"void","refId":"void"},"id":"dispose0()","name":"dispose","kind":"method","line":"517"},{"isFinal":true,"ref":{"name":"GitDir","refId":"bot_git/GitDir"},"id":"gitDir","name":"gitDir","kind":"variable","line":"509"},{"isFinal":true,"ref":{"name":"TempDir","refId":"bot_io/TempDir"},"id":"gitHostDir","name":"gitHostDir","kind":"variable","line":"510"},{"isFinal":true,"ref":{"name":"TempDir","refId":"bot_io/TempDir"},"id":"gitWorkTreeDir","name":"gitWorkTreeDir","kind":"variable","line":"511"},{"id":"_TempDirs3()","name":"_TempDirs","children":[{"initializedField":{"name":"gitDir","refId":"bot_git/_TempDirs/gitDir"},"ref":{"name":"GitDir","refId":"bot_git/GitDir"},"id":"gitDir","name":"gitDir","kind":"param"},{"initializedField":{"name":"gitHostDir","refId":"bot_git/_TempDirs/gitHostDir"},"ref":{"name":"TempDir","refId":"bot_io/TempDir"},"id":"gitHostDir","name":"gitHostDir","kind":"param"},{"initializedField":{"name":"gitWorkTreeDir","refId":"bot_git/_TempDirs/gitWorkTreeDir"},"ref":{"name":"TempDir","refId":"bot_io/TempDir"},"id":"gitWorkTreeDir","name":"gitWorkTreeDir","kind":"param"}],"kind":"constructor","line":"513"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git_dir.dart","kind":"class","isPrivate":true,"line":"508"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"GitDir","name":"GitDir","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"getCommitCount1()","name":"getCommitCount","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"'HEAD'","isOptional":true,"id":"branchName","name":"branchName","kind":"param"}],"kind":"method","line":"15"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Commit","refId":"bot_git/Commit"}]},"id":"getCommit1()","name":"getCommit","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"rev","name":"rev","kind":"param"}],"kind":"method","comment":"\n[rev] should probably be a sha1 to a commit.\nBut GIT lets you do other things.\nSee http://git-scm.com/docs/gitrevisions.html\n","line":"27"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Commit","refId":"bot_git/Commit"}]}]},"id":"getCommits1()","name":"getCommits","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"'HEAD'","isOptional":true,"id":"branchName","name":"branchName","kind":"param"}],"kind":"method","line":"34"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"id":"getBranchNames0()","name":"getBranchNames","kind":"method","line":"39"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"BranchReference","refId":"bot_git/BranchReference"}]},"id":"getBranchReference1()","name":"getBranchReference","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"branchName","name":"branchName","kind":"param"}],"kind":"method","line":"48"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"BranchReference","refId":"bot_git/BranchReference"}]}]},"id":"getBranchReferences0()","name":"getBranchReferences","kind":"method","line":"63"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"Tag","refId":"bot_git/Tag"}]}]},"id":"getTags0()","name":"getTags","kind":"method","line":"73"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"CommitReference","refId":"bot_git/CommitReference"}]}]},"id":"showRef2()","name":"showRef","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"defaultValue":"false","isOptional":true,"id":"heads","name":"heads","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"defaultValue":"false","isOptional":true,"id":"tags","name":"tags","kind":"param"}],"kind":"method","line":"88"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"BranchReference","refId":"bot_git/BranchReference"}]},"id":"getCurrentBranch0()","name":"getCurrentBranch","kind":"method","line":"113"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"TreeEntry","refId":"bot_git/TreeEntry"}]}]},"id":"lsTree3()","name":"lsTree","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"treeish","name":"treeish","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"defaultValue":"false","isOptional":true,"id":"subTreesOnly","name":"subTreesOnly","kind":"param","line":"124"},{"ref":{"name":"String","refId":"dart.core/String"},"isNamed":true,"defaultValue":"null","isOptional":true,"id":"path","name":"path","kind":"param","line":"124"}],"kind":"method","line":"123"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"createOrUpdateBranch3()","name":"createOrUpdateBranch","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"branchName","name":"branchName","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"commitMessage","name":"commitMessage","kind":"param","line":"148"}],"kind":"method","comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","line":"147"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"_updateBranch3()","name":"_updateBranch","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"targetBranchSha","name":"targetBranchSha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"commitMessage","name":"commitMessage","kind":"param"}],"kind":"method","comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","isPrivate":true,"line":"179"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"commitTree3()","name":"commitTree","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"commitMessage","name":"commitMessage","kind":"param"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isNamed":true,"isOptional":true,"id":"parentCommitShas","name":"parentCommitShas","kind":"param"}],"kind":"method","comment":"\nReturns the `SHA1` for the new commit.\n\nSee [git-commit-tree](http://git-scm.com/docs/git-commit-tree)\n","line":"195"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]}]},"id":"writeObjects1()","name":"writeObjects","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"paths","name":"paths","kind":"param"}],"kind":"method","comment":"\nGiven a list of [paths], write those files to the object store\nand return a [Map] where the key is the input path and the value is\nthe SHA of the newly written object.\n","line":"226"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ProcessResult","refId":"dart.io/ProcessResult"}]},"id":"runCommand2()","name":"runCommand","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"args","name":"args","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"id":"throwOnError","name":"throwOnError","kind":"param"}],"kind":"method","line":"243"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"id":"isWorkingTreeClean0()","name":"isWorkingTreeClean","kind":"method","line":"261"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Commit","refId":"bot_git/Commit"}]},"id":"populateBranch3()","name":"populateBranch","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"branchName","name":"branchName","kind":"param"},{"ref":{"name":"PopulateTempDir","refId":"bot_git/PopulateTempDir"},"id":"populator","name":"populator","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"commitMessage","name":"commitMessage","kind":"param"}],"kind":"method","comment":"\nIf the content provided matches the content in the specificed [branchName], then\n`null` is returned.\n\nIf no content is added to the directory, an [Error] is thrown.\n","line":"275"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_TempDirs","refId":"bot_git/_TempDirs"}]},"id":"_getTempDirPairForNewBranch1()","name":"_getTempDirPairForNewBranch","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"newBranchName","name":"newBranchName","kind":"param"}],"kind":"method","isPrivate":true,"line":"344"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_TempDirs","refId":"bot_git/_TempDirs"}]},"id":"_getTempDirPair1()","name":"_getTempDirPair","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"existingBranchName","name":"existingBranchName","kind":"param"}],"kind":"method","isPrivate":true,"line":"385"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"id":"isGitDir1()","name":"isGitDir","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"}],"kind":"method","line":"427"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"GitDir","refId":"bot_git/GitDir"}]},"id":"init2()","name":"init","children":[{"ref":{"name":"Directory","refId":"dart.io/Directory"},"id":"source","name":"source","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"defaultValue":"false","isOptional":true,"id":"allowContent","name":"allowContent","kind":"param"}],"kind":"method","comment":"\n[allowContent] if true, doesn't check to see if the directory is empty\n\nWill fail if the source is a git directory (either at the root or a sub directory)\n","line":"444"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"GitDir","refId":"bot_git/GitDir"}]},"id":"fromExisting1()","name":"fromExisting","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"gitDirRoot","name":"gitDirRoot","kind":"param"}],"kind":"method","line":"461"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"GitDir","refId":"bot_git/GitDir"}]},"id":"_init1()","name":"_init","children":[{"ref":{"name":"Directory","refId":"dart.io/Directory"},"id":"source","name":"source","kind":"param"}],"kind":"method","isPrivate":true,"line":"477"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"id":"_isGitDir1()","name":"_isGitDir","children":[{"ref":{"name":"Directory","refId":"dart.io/Directory"},"id":"dir","name":"dir","kind":"param"}],"kind":"method","isPrivate":true,"line":"494"},{"ref":{"name":"Path","refId":"dart.io/Path"},"id":"path","name":"path","kind":"property","line":"13"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"_processWorkingDir","name":"_processWorkingDir","kind":"property","isPrivate":true,"line":"425"},{"isStatic":true,"id":"_workTreeArg","name":"_workTreeArg","kind":"variable","isPrivate":true,"line":"4"},{"isStatic":true,"id":"_gitDirArg","name":"_gitDirArg","kind":"variable","isPrivate":true,"line":"5"},{"isFinal":true,"ref":{"name":"RegExp","refId":"dart.core/RegExp"},"isStatic":true,"id":"_shaRegExp","name":"_shaRegExp","kind":"variable","isPrivate":true,"line":"6"},{"isFinal":true,"ref":{"name":"Path","refId":"dart.io/Path"},"id":"_path","name":"_path","kind":"variable","isPrivate":true,"line":"8"},{"isFinal":true,"ref":{"name":"Path","refId":"dart.io/Path"},"id":"_gitWorkTree","name":"_gitWorkTree","kind":"variable","isPrivate":true,"line":"9"},{"id":"GitDir._raw2()","name":"GitDir._raw","children":[{"initializedField":{"name":"_path","refId":"bot_git/GitDir/_path"},"ref":{"name":"Path","refId":"dart.io/Path"},"id":"_path","name":"_path","kind":"param","isPrivate":true},{"initializedField":{"name":"_gitWorkTree","refId":"bot_git/GitDir/_gitWorkTree"},"ref":{"name":"Path","refId":"dart.io/Path"},"defaultValue":"null","isOptional":true,"id":"_gitWorkTree","name":"_gitWorkTree","kind":"param","isPrivate":true}],"kind":"constructor","isPrivate":true,"line":"11"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git_dir.dart","kind":"class","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"TreeEntry","name":"TreeEntry","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"309"},{"isStatic":true,"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"TreeEntry","refId":"bot_git/TreeEntry"}]},"id":"fromLsTreeOutput1()","name":"fromLsTreeOutput","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"output","name":"output","kind":"param"}],"kind":"method","line":"311"},{"isFinal":true,"isStatic":true,"id":"_lsTreeLine","name":"_lsTreeLine","kind":"variable","isPrivate":true,"line":"272"},{"isFinal":true,"isStatic":true,"id":"_lsTreeRegEx","name":"_lsTreeRegEx","kind":"variable","isPrivate":true,"line":"276"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"mode","name":"mode","kind":"variable","comment":"\nAll numbers.\n\nSee this this [post on stackoverflow](http://stackoverflow.com/questions/737673/how-to-read-the-mode-field-of-git-ls-trees-output)\n","line":"283"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"type","name":"type","kind":"variable","line":"286"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"variable","line":"287"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"variable","line":"288"},{"id":"TreeEntry4()","name":"TreeEntry","children":[{"initializedField":{"name":"mode","refId":"bot_git/TreeEntry/mode"},"ref":{"name":"String","refId":"dart.core/String"},"id":"mode","name":"mode","kind":"param"},{"initializedField":{"name":"type","refId":"bot_git/TreeEntry/type"},"ref":{"name":"String","refId":"dart.core/String"},"id":"type","name":"type","kind":"param"},{"initializedField":{"name":"sha","refId":"bot_git/TreeEntry/sha"},"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"param"},{"initializedField":{"name":"name","refId":"bot_git/TreeEntry/name"},"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"param"}],"kind":"constructor","line":"290"},{"id":"TreeEntry.fromLsTree1()","name":"TreeEntry.fromLsTree","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"value","name":"value","kind":"param"}],"kind":"constructor","line":"302"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","line":"271"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Commit","name":"Commit","children":[{"isStatic":true,"returnType":{"name":"Commit","refId":"bot_git/Commit"},"id":"parse1()","name":"parse","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"content","name":"content","kind":"param"}],"kind":"method","line":"187"},{"isStatic":true,"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Commit","refId":"bot_git/Commit"}]},"id":"parseRawRevList1()","name":"parseRawRevList","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"content","name":"content","kind":"param"}],"kind":"method","line":"194"},{"isStatic":true,"returnType":{"name":"Tuple","refId":"bot/Tuple","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Commit","refId":"bot_git/Commit"}]},"id":"_parse2()","name":"_parse","children":[{"ref":{"name":"StringLineReader","refId":"bot/StringLineReader"},"id":"slr","name":"slr","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isRevParse","name":"isRevParse","kind":"param"}],"kind":"method","isPrivate":true,"line":"207"},{"isFinal":true,"isStatic":true,"id":"_headerRegExp","name":"_headerRegExp","kind":"variable","isPrivate":true,"line":"165"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"treeSha","name":"treeSha","kind":"variable","line":"167"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"author","name":"author","kind":"variable","line":"168"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"committer","name":"committer","kind":"variable","line":"169"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"variable","line":"170"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"content","name":"content","kind":"variable","line":"171"},{"isFinal":true,"ref":{"name":"ReadOnlyCollection","refId":"bot/ReadOnlyCollection","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"parents","name":"parents","kind":"variable","line":"172"},{"id":"Commit._internal6()","name":"Commit._internal","children":[{"initializedField":{"name":"treeSha","refId":"bot_git/Commit/treeSha"},"ref":{"name":"String","refId":"dart.core/String"},"id":"treeSha","name":"treeSha","kind":"param"},{"initializedField":{"name":"author","refId":"bot_git/Commit/author"},"ref":{"name":"String","refId":"dart.core/String"},"id":"author","name":"author","kind":"param"},{"initializedField":{"name":"committer","refId":"bot_git/Commit/committer"},"ref":{"name":"String","refId":"dart.core/String"},"id":"committer","name":"committer","kind":"param"},{"initializedField":{"name":"message","refId":"bot_git/Commit/message"},"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"},{"initializedField":{"name":"content","refId":"bot_git/Commit/content"},"ref":{"name":"String","refId":"dart.core/String"},"id":"content","name":"content","kind":"param","line":"175"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"parents","name":"parents","kind":"param","line":"175"}],"kind":"constructor","isPrivate":true,"line":"174"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","line":"164"},{"superclass":{"name":"CommitReference","refId":"bot_git/CommitReference"},"id":"BranchReference","name":"BranchReference","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"160"},{"isStatic":true,"id":"_localBranchPrefix","name":"_localBranchPrefix","kind":"variable","isPrivate":true,"line":"145"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"branchName","name":"branchName","kind":"variable","line":"147"},{"id":"BranchReference2()","name":"BranchReference","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"reference","name":"reference","kind":"param"}],"kind":"constructor","line":"149"},{"id":"BranchReference._internal3()","name":"BranchReference._internal","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"reference","name":"reference","kind":"param"},{"initializedField":{"name":"branchName","refId":"bot_git/BranchReference/branchName"},"ref":{"name":"String","refId":"dart.core/String"},"id":"branchName","name":"branchName","kind":"param"}],"kind":"constructor","isPrivate":true,"line":"157"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","line":"144"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"CommitReference","name":"CommitReference","children":[{"isStatic":true,"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"CommitReference","refId":"bot_git/CommitReference"}]},"id":"fromShowRefOutput1()","name":"fromShowRefOutput","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"input","name":"input","kind":"param"}],"kind":"method","line":"120"},{"returnType":{"name":"BranchReference","refId":"bot_git/BranchReference"},"id":"toBranchReference0()","name":"toBranchReference","kind":"method","line":"137"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"140"},{"isFinal":true,"ref":{"name":"RegExp","refId":"dart.core/RegExp"},"isStatic":true,"id":"_lsRemoteRegExp","name":"_lsRemoteRegExp","kind":"variable","isPrivate":true,"line":"107"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"variable","line":"109"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"reference","name":"reference","kind":"variable","line":"110"},{"id":"CommitReference2()","name":"CommitReference","children":[{"initializedField":{"name":"sha","refId":"bot_git/CommitReference/sha"},"ref":{"name":"String","refId":"dart.core/String"},"id":"sha","name":"sha","kind":"param"},{"initializedField":{"name":"reference","refId":"bot_git/CommitReference/reference"},"ref":{"name":"String","refId":"dart.core/String"},"id":"reference","name":"reference","kind":"param"}],"kind":"constructor","line":"112"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","comment":"\nRepresents the output from `git show-ref`\n","line":"106"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Tag","name":"Tag","children":[{"isStatic":true,"returnType":{"name":"Tag","refId":"bot_git/Tag"},"id":"parseCatFile1()","name":"parseCatFile","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"content","name":"content","kind":"param"}],"kind":"method","line":"75"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"objectSha","name":"objectSha","kind":"variable","line":"63"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"type","name":"type","kind":"variable","line":"64"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"tag","name":"tag","kind":"variable","line":"65"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"tagger","name":"tagger","kind":"variable","line":"66"},{"id":"Tag._internal4()","name":"Tag._internal","children":[{"initializedField":{"name":"objectSha","refId":"bot_git/Tag/objectSha"},"ref":{"name":"String","refId":"dart.core/String"},"id":"objectSha","name":"objectSha","kind":"param"},{"initializedField":{"name":"type","refId":"bot_git/Tag/type"},"ref":{"name":"String","refId":"dart.core/String"},"id":"type","name":"type","kind":"param"},{"initializedField":{"name":"tag","refId":"bot_git/Tag/tag"},"ref":{"name":"String","refId":"dart.core/String"},"id":"tag","name":"tag","kind":"param"},{"initializedField":{"name":"tagger","refId":"bot_git/Tag/tagger"},"ref":{"name":"String","refId":"dart.core/String"},"id":"tagger","name":"tagger","kind":"param"}],"kind":"constructor","isPrivate":true,"line":"68"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","line":"62"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Git","name":"Git","children":[{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"isValidSha1()","name":"isValidSha","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"value","name":"value","kind":"param"}],"kind":"method","line":"23"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ProcessResult","refId":"dart.io/ProcessResult"}]},"id":"runGit3()","name":"runGit","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"args","name":"args","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"defaultValue":"true","isOptional":true,"id":"throwOnError","name":"throwOnError","kind":"param","line":"28"},{"ref":{"name":"String","refId":"dart.core/String"},"isNamed":true,"isOptional":true,"id":"processWorkingDir","name":"processWorkingDir","kind":"param","line":"28"}],"kind":"method","line":"27"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"id":"_throwIfProcessFailed3()","name":"_throwIfProcessFailed","children":[{"ref":{"name":"ProcessResult","refId":"dart.io/ProcessResult"},"id":"pr","name":"pr","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"process","name":"process","kind":"param"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"id":"args","name":"args","kind":"param"}],"kind":"method","isPrivate":true,"line":"45"},{"isStatic":true,"id":"_shaRegexPattern","name":"_shaRegexPattern","kind":"variable","isPrivate":true,"line":"20"},{"isFinal":true,"isStatic":true,"id":"_shaRegEx","name":"_shaRegEx","kind":"variable","isPrivate":true,"line":"21"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_git/git.dart","kind":"class","line":"19"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/bot_git.dart","kind":"library","line":"1"}