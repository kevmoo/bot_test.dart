{"dependencies":[{"uri":"file:///usr/local/Cellar/dart-editor/25388/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"file:///usr/local/Cellar/dart-editor/25388/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","id":"0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:stack_trace/src/frame.dart","name":"package:stack_trace/src/frame.dart","id":"frame","children":[{"isFinal":true,"name":"_initialDot","isPrivate":true,"id":"_initialDot","line":"32","kind":"variable"},{"isFinal":true,"name":"_friendlyFrame","isPrivate":true,"id":"_friendlyFrame","line":"29","kind":"variable"},{"isFinal":true,"name":"_firefoxFrame","isPrivate":true,"id":"_firefoxFrame","line":"24","kind":"variable"},{"isFinal":true,"name":"_v8Frame","isPrivate":true,"id":"_v8Frame","line":"18","kind":"variable"},{"isFinal":true,"name":"_vmFrame","isPrivate":true,"id":"_vmFrame","line":"13","kind":"variable"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"A single stack frame. Each frame points to a precise location in Dart code.","name":"Frame","id":"Frame","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"174","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether this stack frame comes from the Dart core libraries.","name":"isCore","id":"isCore","line":"59","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"Returns a human-friendly description of the library that this stack frame\ncomes from.\n\nThis will usually be the string form of [uri], but a relative URI will be\nused if possible.","name":"library","id":"library","line":"66","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"Returns the name of the package this stack frame comes from, or `null` if\nthis stack frame doesn't come from a `package:` URL.","name":"package","id":"package","line":"73","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"A human-friendly description of the code location.","name":"location","id":"location","line":"79","kind":"property"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"isFinal":true,"comment":"The URI of the file in which the code is located.\n\nThis URI will usually have the scheme `dart`, `file`, `http`, or `https`.","name":"uri","id":"uri","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"comment":"The line number on which the code location is located.\n\nThis can be null, indicating that the line number is unknown or\nunimportant.","name":"line","id":"line","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"comment":"The column number of the code location.\n\nThis can be null, indicating that the column number is unknown or\nunimportant.","name":"column","id":"column","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"comment":"The name of the member in which the code location occurs.\n\nAnonymous closures are represented as `<fn>` in this member string.","name":"member","id":"member","line":"56","kind":"variable"},{"returnType":{"refId":"frame/Frame","name":"Frame"},"comment":"Returns a single frame of the current stack.\n\nBy default, this will return the frame above the current method. If\n[level] is `0`, it will return the current method's frame; if [level] is\nhigher than `1`, it will return higher frames.","name":"caller","id":"caller1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"1","name":"level","id":"level","kind":"param"}],"line":"89","kind":"constructor"},{"returnType":{"refId":"frame/Frame","name":"Frame"},"comment":"Parses a string representation of a Dart VM stack frame.","name":"parseVM","id":"parseVM1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"frame","id":"frame","kind":"param"}],"line":"99","kind":"constructor"},{"returnType":{"refId":"frame/Frame","name":"Frame"},"comment":"Parses a string representation of a Chrome/V8 stack frame.","name":"parseV8","id":"parseV81()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"frame","id":"frame","kind":"param"}],"line":"111","kind":"constructor"},{"returnType":{"refId":"frame/Frame","name":"Frame"},"comment":"Parses a string representation of a Firefox stack frame.","name":"parseFirefox","id":"parseFirefox1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"frame","id":"frame","kind":"param"}],"line":"132","kind":"constructor"},{"returnType":{"refId":"frame/Frame","name":"Frame"},"comment":"Parses this package's string representation of a stack frame.","name":"parseFriendly","id":"parseFriendly1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"frame","id":"frame","kind":"param"}],"line":"153","kind":"constructor"},{"name":"","id":"4()","children":[{"initializedField":{"refId":"frame/Frame/uri","name":"uri"},"ref":{"refId":"dart.core/Uri","name":"Uri"},"name":"uri","id":"uri","kind":"param"},{"initializedField":{"refId":"frame/Frame/line","name":"line"},"ref":{"refId":"dart.core/int","name":"int"},"name":"line","id":"line","kind":"param"},{"initializedField":{"refId":"frame/Frame/column","name":"column"},"ref":{"refId":"dart.core/int","name":"int"},"name":"column","id":"column","kind":"param"},{"initializedField":{"refId":"frame/Frame/member","name":"member"},"ref":{"refId":"dart.core/String","name":"String"},"name":"member","id":"member","kind":"param"}],"line":"172","kind":"constructor"}],"line":"35","kind":"class"}],"line":"5","kind":"library"}