{"dependencies":[{"uri":"file:///usr/local/Cellar/dart-editor/25388/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn interface implemented by all stack trace objects.\n\nA [StackTrace] is intended to convey information to the user about the call\nsequence that triggered an exception.\n\nThese objects are created by the runtime, it is not possible to create\nthem programmatically.\n","uri":"file:///usr/local/Cellar/dart-editor/25388/dart-sdk/lib/core/stacktrace.dart","name":"StackTrace","id":"StackTrace","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a [String] representation of the stack trace.\n\nThe string represents the full stack trace starting from\nthe point where a throw ocurred to the top of the current call sequence.\n\nThe exact format of the string representation is not final.\n","name":"toString","id":"toString0()","line":"25","kind":"method"}],"line":"16","kind":"class"},{"comment":"\nEverything in Dart is an [Object].\n","uri":"file:///usr/local/Cellar/dart-editor/25388/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","id":"0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:stack_trace/src/vm_trace.dart","name":"package:stack_trace/src/vm_trace.dart","id":"vm_trace","children":[{"interfaces":[{"refId":"dart.core/StackTrace","name":"StackTrace"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"An implementation of [StackTrace] that emulates the behavior of the VM's\nimplementation.\n\nIn particular, when [toString] is called, this returns a string in the VM's\nstack trace format.","name":"VMTrace","id":"VMTrace","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"21","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"frame/Frame","name":"Frame"}],"name":"List"},"isFinal":true,"comment":"The stack frames that comprise this stack trace.","name":"frames","id":"frames","line":"17","kind":"variable"},{"name":"","id":"1()","children":[{"initializedField":{"refId":"vm_trace/VMTrace/frames","name":"frames"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"frame/Frame","name":"Frame"}],"name":"List"},"name":"frames","id":"frames","kind":"param"}],"line":"19","kind":"constructor"}],"line":"15","kind":"class"}],"line":"5","kind":"library"}